<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="kr.or.yi.mybatis_dev_lch.dao.StudentMapper">
	<sql id="selectSql">
		select stud_id as studid, name, email, dob, phone
		from students
	</sql>

	<sql id="whereSql">
		<where>
			<if test="studId!=null">
				stud_id = #{studId}
			</if>
		</where>
	</sql>

	<sql id="insertSql">
		INSERT INTO students (STUD_ID, NAME, EMAIL, PHONE, DOB)
		VALUES (#{studId}, #{name}, #{email}, #{phone}, #{dob});
	</sql>

	<sql id="deleteSql">
		DELETE FROM students
		WHERE STUD_ID= #{studId};
	</sql>
	
	<select id="selectStudentByNo" parameterType="Student"
		resultType="Student">
		<!-- select stud_id as studid, name, email, dob, phone from students -->
		<include refid="selectSql" />
		<!-- stud_ud = #{studId} -->
		<include refid="whereSql" />
	</select>

	<select id="selectStudentByAll" resultType="Student">
		<!-- select stud_id as studid, name, email, dob, phone from students -->
		<include refid="selectSql" />
	</select>

	<insert id="insertStudent" parameterType="Student">
		<include refid="insertSql"></include>
	</insert>

	<delete id="deleteStudent" parameterType="int">
		<include refid="deleteSql"></include>
	</delete>

	<update id="updateStudent" parameterType="Student">
		UPDATE
		students
		SET NAME=#{name}, EMAIL=#{email}, PHONE=#{phone}, DOB=#{dob}
		WHERE STUD_ID=#{studId};

	</update>
	
	<!-- resultMap -->
	<resultMap type="Student" id="StudentResult">
		<id property="studId" column="stud_id"/>
		<result property="name" column="name"/>
		<result property="email" column="email"/>
		<result property="phone" column="phone"/>
		<result property="dob" column="dob"/>
	</resultMap>
	
	<select id="selectStudentByAllForResultMap" resultMap="StudentResult">
		<include refid="selectSql"></include>
	</select>
	
	<!-- hashMap -->
	<select id="selectStudentByAllForHashMap" resultType="map">
		<include refid="selectSql"></include>
	</select>
	
	<resultMap id="StudentWithAddressResult" type="Student" extends="StudentResult">
		<result property="address.addrId" column="addr_id"/>
		<result property="address.street" column="street"/>
		<result property="address.city" column="city"/>
		<result property="address.state" column="state"/>
		<result property="address.zip" column="zip"/>
		<result property="address.country" column="country"/>
	</resultMap>
	
	<sql id="selectJoinAddressSql">
		select stud_id as studId, name, email, dob, phone, s.ADDR_ID as addrId, STREET, CITY, STATE, ZIP, COUNTRY
		from students as s join addresses as a on s.ADDR_ID = a.ADDR_ID
	</sql>
	
	<select id="selectStudentByNoForResultMapExtends" parameterType="Student" resultMap="StudentWithAddressResult">
		<include refid="selectJoinAddressSql"></include>
		<include refid="whereSql"></include>
	</select>
	
	<select id="selectStudentByNoForResultMapExtends2" parameterType="int" resultMap="StudentWithAddressResult">
		<include refid="selectJoinAddressSql"></include>
		WHERE STUD_ID= #{studId};
	</select>
</mapper>